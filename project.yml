---
- name: Setup Development Environment
  hosts: servers
  become: yes
  vars:
    mysql_version: "8.0"
    mongo_version: "3.4.7"
    mongodb_dir: "/opt/mongodb"
    mongodb_port: 27017
    java_versions:
      - 8
      - 11
      - 17

  tasks:
    - name: Install Git
      apt:
        name: git
        state: present
      when: git_installed is not defined

    - name: Check if Git is installed
      command: git --version
      register: git_version
      ignore_errors: true

    - name: Set fact if Git is installed
      set_fact:
        git_installed: true
      when: git_version.rc == 0

    - name: Install MySQL
      apt:
        name: mysql-server
        state: present
      when: mysql_installed is not defined

    - name: Check if MySQL is installed
      command: mysql --version
      register: mysql_version
      ignore_errors: true

    - name: Set fact if MySQL is installed
      set_fact:
        mysql_installed: true
      when: mysql_version.rc == 0

    - name: Start and enable MySQL
      service:
        name: mysql
        state: started
        enabled: yes
      when: mysql_installed is not defined

    - name: Create directory for MongoDB installation
      ansible.builtin.file:
        path: "{{ mongodb_dir }}"
        state: directory
        mode: "0755"
      when: mongodb_installed | default(false) == false

    - name: Download MongoDB archive
      ansible.builtin.get_url:
        url: "https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-{{ mongo_version }}.tgz"
        dest: "{{ mongodb_dir }}/mongodb-linux-x86_64-{{ mongo_version }}.tgz"
      when: mongodb_installed | default(false) == false

    - name: Extract MongoDB archive
      ansible.builtin.command:
        cmd: "tar -xvf {{ mongodb_dir }}/mongodb-linux-x86_64-{{ mongo_version }}.tgz --directory {{ mongodb_dir }} --strip-components=1"
      args:
        creates: "{{ mongodb_dir }}/bin/mongod"
      when: mongodb_installed | default(false) == false

    - name: Ensure MongoDB binaries are executable
      ansible.builtin.file:
        path: "{{ mongodb_dir }}/bin/mongod"
        mode: '0755'
      when: mongodb_installed | default(false) == false

    - name: Set MongoDB configuration parameters
      ansible.builtin.copy:
        content: |
          # mongod.conf
          # for documentation of all options, see:
          #   http://docs.mongodb.org/manual/reference/configuration-options/

          # Where and how to store data.
          storage:
            dbPath: {{ mongodb_dir }}
            journal:
              enabled: true
          # where to write logging data.
          systemLog:
            destination: file
            logAppend: true
            path: {{ mongodb_dir }}/mongod.log
          # network interfaces
          net:
            port: {{ mongodb_port }}
            bindIp: 127.0.0.1
        dest: /etc/mongod.conf
      when: mongodb_installed | default(false) == false

    - name: Create systemd service file for MongoDB
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=MongoDB Database Service
          After=network.target

          [Service]
          User=root
          ExecStart={{ mongodb_dir }}/bin/mongod --config /etc/mongod.conf
          ExecReload=/bin/kill -HUP $MAINPID
          Restart=on-failure
          LimitNOFILE=64000

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/mongodb.service
        mode: '0644'
      when: mongodb_installed | default(false) == false

    - name: Reload systemd daemon
      ansible.builtin.command:
        cmd: systemctl daemon-reload
      when: mongodb_installed | default(false) == false

    - name: Start MongoDB service
      ansible.builtin.service:
        name: mongodb
        state: started
        enabled: yes
      when: mongodb_installed | default(false) == false

    - name: Create symbolic link for MongoDB binaries
      ansible.builtin.file:
        src: "{{ mongodb_dir }}/bin/mongo"
        dest: "/usr/local/bin/mongo"
        state: link
      when: mongodb_installed | default(false) == false

    - name: Verify MongoDB client installation
      ansible.builtin.command:
        cmd: mongo --version
      register: mongo_version
      when: mongodb_installed | default(false) == false

    - name: Set fact if MongoDB is installed
      set_fact:
        mongodb_installed: true
      when: mongodb_installed | default(false) == false

    - name: Print MongoDB client version
      ansible.builtin.debug:
        msg: "MongoDB client version: {{ mongo_version.stdout }}"
      when: mongodb_installed

    - name: Install Java
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - openjdk-8-jdk
        - openjdk-11-jdk
        - openjdk-17-jdk
      when: java_installed is not defined

    - name: Check if Java is installed
      command: java -version
      register: java_version
      ignore_errors: true

    - name: Set fact if Java is installed
      set_fact:
        java_installed: true
      when: java_version.rc == 0

    - name: Install Maven
      apt:
        name: maven
        state: present
      when: maven_installed is not defined

    - name: Check if Maven is installed
      command: mvn -version
      register: maven_version
      ignore_errors: true

    - name: Set fact if Maven is installed
      set_fact:
        maven_installed: true
      when: maven_version.rc == 0

    - name: Print Maven version
      ansible.builtin.debug:
        msg: "Maven version: {{ maven_version.stdout }}"
      when: maven_installed
